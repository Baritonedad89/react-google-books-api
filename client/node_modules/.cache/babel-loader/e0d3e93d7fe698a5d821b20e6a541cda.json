{"ast":null,"code":"import _classCallCheck from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport API from '../services/API';\nimport Navbar from '../components/Navbar';\nimport Container from '../components/Container';\nimport Row from '../components/Row';\nimport Jumbotron from '../components/Jumbotron';\nimport Col from '../components/Col';\nimport Searchbar from '../components/Searchbar';\nimport Card from '../components/Card';\nimport CardWrapper from '../components/CardWrapper';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: [],\n      search: \"\",\n      loading: false\n    };\n\n    _this.searchBooks = function (query) {\n      _this.setState({\n        loading: true\n      });\n\n      API.callGoogle(query).then(function (res) {\n        return _this.setState({\n          loading: false,\n          result: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      var value = e.target.value; // const name = e.target.name;\n\n      _this.setState({\n        search: value\n      });\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n\n      _this.searchBooks(_this.state.search);\n\n      console.log(_this.state.search);\n\n      _this.setState({\n        search: \"\"\n      });\n    };\n\n    _this.saveBook = function (e) {\n      var thisCardsId = e.target.getAttribute('data-id');\n      var newSavedBook = _this.state.result;\n      var allotherbooks = newSavedBook.filter(function (result) {\n        return result.id !== thisCardsId;\n      });\n\n      _this.setState({\n        result: allotherbooks\n      });\n\n      newSavedBook.map(function (book) {\n        API.saveBook({\n          title: book.volumeInfo.title,\n          authors: book.volumeInfo.authors,\n          description: book.volumeInfo.description,\n          image: book.volumeInfo.imageLinks.smallThumbnail,\n          link: book.volumeInfo.infoLink\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('--component did mount');\n      this.searchBooks(\"1984\");\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('--component did update');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(Jumbotron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Searchbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col l12 center align\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"preloader-wrapper big active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"spinner-layer spinner-blue-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle-clipper left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"gap-patch\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"circle-clipper right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })))))));\n      } // else \n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Searchbar, {\n        value: this.state.search,\n        handleInputChange: this.handleInputChange,\n        handleFormSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(CardWrapper, {\n        title: 'Results',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.result.map(function (result) {\n        return React.createElement(Card, {\n          key: result.id,\n          url: result.volumeInfo.imageLinks ? result.volumeInfo.imageLinks.smallThumbnail : \"https://via.placeholder.com/128x124\",\n          name: result.volumeInfo.title,\n          author: result.volumeInfo.authors,\n          infoLink: result.volumeInfo.infoLink,\n          desc: result.volumeInfo.description ? result.volumeInfo.description : \"No description\",\n          handleBookSave: _this2.saveBook,\n          id: result.id,\n          leftButton: \"View\",\n          rightButton: \"Save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/src/pages/Home.js"],"names":["React","Component","API","Navbar","Container","Row","Jumbotron","Col","Searchbar","Card","CardWrapper","Home","state","result","search","loading","searchBooks","query","setState","callGoogle","then","res","data","catch","err","console","log","handleInputChange","e","value","target","handleFormSubmit","preventDefault","saveBook","thisCardsId","getAttribute","newSavedBook","allotherbooks","filter","id","map","book","title","volumeInfo","authors","description","image","imageLinks","smallThumbnail","link","infoLink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport API from '../services/API'\n\nimport Navbar from '../components/Navbar'\nimport Container from '../components/Container'\nimport Row from '../components/Row'\nimport Jumbotron from '../components/Jumbotron';\nimport Col from '../components/Col'\nimport Searchbar from '../components/Searchbar'\nimport Card from '../components/Card'\nimport CardWrapper from '../components/CardWrapper'\n\n\n\nclass Home extends Component {\n    state = {\n        result: [],\n        search: \"\",\n        loading: false,\n    };\n\n    componentDidMount() {\n        console.log('--component did mount')\n        this.searchBooks(\"1984\")\n    }\n\n    componentDidUpdate() {\n        console.log('--component did update')\n    }\n\n    searchBooks = query => {\n        this.setState({ loading: true })\n        API\n            .callGoogle(query)\n            .then(res => this.setState({ loading: false, result: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    handleInputChange = e => {\n        const value = e.target.value;\n        // const name = e.target.name;\n        this.setState({\n            search: value\n        });\n    };\n\n    // When the form is submitted, search the OMDB API for the value of `this.state.search`\n    handleFormSubmit = e => {\n        e.preventDefault();\n        this.searchBooks(this.state.search);\n        console.log(this.state.search)\n        this.setState({\n            search: \"\"\n        })\n    };\n\n\n\n    // saveBook = (e) => {\n    //     const thisCardsId = e.target.getAttribute('data-id');\n    //     const newSavedBook = this.state.result\n    //     newSavedBook\n    //         .filter(result => result.id === thisCardsId)\n    //         .map(book => {\n    //             API.saveBook({\n    //                 title: book.volumeInfo.title,\n    //                 authors: book.volumeInfo.authors,\n    //                 description: book.volumeInfo.description,\n    //                 image: book.volumeInfo.imageLinks.smallThumbnail,\n    //                 link: book.volumeInfo.infoLink,\n    //             })\n    //         })\n    // }\n\n    saveBook = (e) => {\n        const thisCardsId = e.target.getAttribute('data-id');\n        const newSavedBook = this.state.result\n          const allotherbooks =  newSavedBook.filter(result => result.id !== thisCardsId) \n                    this.setState({result: allotherbooks})\n                    newSavedBook.map(book => {\n                        API.saveBook({\n                            title: book.volumeInfo.title,\n                            authors: book.volumeInfo.authors,\n                            description: book.volumeInfo.description,\n                            image: book.volumeInfo.imageLinks.smallThumbnail,\n                            link: book.volumeInfo.infoLink,\n                        })\n                    })\n\n                }\n\n\n    \n\n\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <Navbar />\n                    <Jumbotron>\n                        <Searchbar />\n                    </Jumbotron>\n                    <div className=\"row\">\n                        <div className=\"col l12 center align\">\n                            <div class=\"preloader-wrapper big active\">\n                                <div class=\"spinner-layer spinner-blue-only\">\n                                    <div class=\"circle-clipper left\">\n                                        <div class=\"circle\"></div>\n                                    </div><div class=\"gap-patch\">\n                                        <div class=\"circle\"></div>\n                                    </div><div class=\"circle-clipper right\">\n                                        <div class=\"circle\"></div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n            )\n\n\n        }\n        // else \n        return (\n\n            <div>\n                <Navbar />\n                <Jumbotron>\n                    <Searchbar\n                        value={this.state.search}\n                        handleInputChange={this.handleInputChange}\n                        handleFormSubmit={this.handleFormSubmit}\n                    />\n\n                </Jumbotron>\n\n                <Container>\n                    <Row>\n                        <Col>\n\n\n                            <CardWrapper title={'Results'}>\n                                {this.state.result.map(result => (\n                                    \n                                    <Card\n                                        key={result.id}\n                                        url={result.volumeInfo.imageLinks ? result.volumeInfo.imageLinks.smallThumbnail : \"https://via.placeholder.com/128x124\"}\n                                        name={result.volumeInfo.title}\n                                        author={result.volumeInfo.authors}\n                                        infoLink={result.volumeInfo.infoLink}\n                                        desc={result.volumeInfo.description ? result.volumeInfo.description : \"No description\"}\n                                        handleBookSave={this.saveBook}\n                                        id={result.id}\n                                        leftButton={\"View\"}\n                                        rightButton={\"Save\"}\n                                    />\n\n                                ))}\n\n\n                            </CardWrapper>\n\n\n\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n\n        )\n    }\n}\n\n\n\n\n\n\nexport default Home"]},"metadata":{},"sourceType":"module"}