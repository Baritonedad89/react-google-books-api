{"ast":null,"code":"import _classCallCheck from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport API from '../services/API';\nimport Navbar from '../components/Navbar';\nimport Container from '../components/Container';\nimport Row from '../components/Row';\nimport Jumbotron from '../components/Jumbotron';\nimport Col from '../components/Col';\nimport Searchbar from '../components/Searchbar';\nimport Card from '../components/Card';\nimport CardWrapper from '../components/CardWrapper';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: [],\n      dbSavedBooks: [],\n      search: \"\",\n      loading: false\n    };\n\n    _this.searchBooks = function (query) {\n      _this.setState({\n        loading: true\n      });\n\n      API.callGoogle(query).then(function (res) {\n        return _this.setState({\n          loading: false,\n          result: res.data\n        });\n      });\n      console.log('result from search', _this.state.result).catch(function (err) {\n        return console.log(err);\n      });\n      console.log('result from search', _this.state.result);\n    };\n\n    _this.handleInputChange = function (e) {\n      var value = e.target.value; // const name = e.target.name;\n\n      _this.setState({\n        search: value\n      });\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault(); // run google call with search parameter \n\n      _this.searchBooks(_this.state.search);\n\n      console.log(_this.state.search);\n\n      _this.setState({\n        search: \"\"\n      });\n    };\n\n    _this.saveBook = function (e) {\n      var thisCardsId = e.target.getAttribute('data-id');\n      var newSavedBook = _this.state.result;\n      newSavedBook.filter(function (result) {\n        return result.id === thisCardsId;\n      }).map(function (book) {\n        API.saveBook({\n          bookId: book.id,\n          title: book.volumeInfo.title,\n          authors: book.volumeInfo.authors,\n          description: book.volumeInfo.description,\n          image: book.volumeInfo.imageLinks.smallThumbnail,\n          link: book.volumeInfo.infoLink\n        });\n      });\n    };\n\n    _this.getAllBooksNotInDb = function () {\n      var dbBooksIds = [];\n      API.getBooks({}).then(function (res) {\n        _this.setState({\n          dbSavedBooks: res.data\n        });\n\n        console.log(res.data);\n      });\n\n      _this.state.dbSavedBooks.forEach(function (book) {\n        dbBooksIds.push(book.BookId);\n      });\n\n      var notExcludedBooks = _this.state.result.filter(function (book) {\n        return !dbBooksIds.includes(book.bookId);\n      }); //    this.setState({result: notExcludedBooks})\n\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('--component did mount');\n      this.searchBooks(\"1984\");\n      this.getAllBooksNotInDb();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('--component did update');\n    }\n  }, {\n    key: \"render\",\n    // saveBook = (e) => {\n    //     const thisCardsId = e.target.getAttribute('data-id');\n    //     const newSavedBook = this.state.result\n    //       const allotherbooks =  newSavedBook.filter(result => result.id !== thisCardsId) \n    //                 this.setState({result: allotherbooks})\n    //             // } else {\n    //             //     newSavedBook.map(book => {\n    //             //         API.saveBook({\n    //             //             title: book.volumeInfo.title,\n    //             //             authors: book.volumeInfo.authors,\n    //             //             description: book.volumeInfo.description,\n    //             //             image: book.volumeInfo.imageLinks.smallThumbnail,\n    //             //             link: book.volumeInfo.infoLink,\n    //             //         })\n    //             //     })\n    //             // }\n    //         }\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }), React.createElement(Jumbotron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Searchbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col l12 center align\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"preloader-wrapper big active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"spinner-layer spinner-blue-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle-clipper left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"gap-patch\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"circle-clipper right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        })))))));\n      } // else \n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Searchbar, {\n        value: this.state.search,\n        handleInputChange: this.handleInputChange,\n        handleFormSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(CardWrapper, {\n        title: 'Results',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.result.map(function (result) {\n        return React.createElement(Card, {\n          key: result.id,\n          url: result.volumeInfo.imageLinks ? result.volumeInfo.imageLinks.smallThumbnail : \"https://via.placeholder.com/128x124\",\n          name: result.volumeInfo.title,\n          author: result.volumeInfo.authors,\n          infoLink: result.volumeInfo.infoLink,\n          desc: result.volumeInfo.description ? result.volumeInfo.description : \"No description\",\n          handleBookSave: _this2.saveBook,\n          id: result.id,\n          leftButton: \"View\",\n          rightButton: \"Save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/codymj/Coding Bootcamp/Homework/react-google-books-api/client/src/pages/Home.js"],"names":["React","Component","API","Navbar","Container","Row","Jumbotron","Col","Searchbar","Card","CardWrapper","Home","state","result","dbSavedBooks","search","loading","searchBooks","query","setState","callGoogle","then","res","data","console","log","catch","err","handleInputChange","e","value","target","handleFormSubmit","preventDefault","saveBook","thisCardsId","getAttribute","newSavedBook","filter","id","map","book","bookId","title","volumeInfo","authors","description","image","imageLinks","smallThumbnail","link","infoLink","getAllBooksNotInDb","dbBooksIds","getBooks","forEach","push","BookId","notExcludedBooks","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport API from '../services/API'\n\nimport Navbar from '../components/Navbar'\nimport Container from '../components/Container'\nimport Row from '../components/Row'\nimport Jumbotron from '../components/Jumbotron';\nimport Col from '../components/Col'\nimport Searchbar from '../components/Searchbar'\nimport Card from '../components/Card'\nimport CardWrapper from '../components/CardWrapper'\n\n\n\nclass Home extends Component {\n    state = {\n        result: [],\n        dbSavedBooks: [],\n        search: \"\",\n        loading: false,\n\n    };\n\n    componentDidMount() {\n        console.log('--component did mount')\n        this.searchBooks(\"1984\")\n        this.getAllBooksNotInDb()\n    }\n\n    componentDidUpdate() {\n        \n        console.log('--component did update')\n    }\n\n    searchBooks = query => {\n        this.setState({ loading: true })\n        API\n            .callGoogle(query)\n            .then(res => this.setState({ loading: false, result: res.data }))\n                        console.log('result from search', this.state.result)\n\n            .catch(err => console.log(err));\n            console.log('result from search', this.state.result)\n    }\n\n    handleInputChange = e => {\n        const value = e.target.value;\n        // const name = e.target.name;\n        this.setState({\n            search: value\n        });\n    };\n\n    // When the form is submitted, search the OMDB API for the value of `this.state.search`\n    handleFormSubmit = e => {\n        e.preventDefault();\n        // run google call with search parameter \n        this.searchBooks(this.state.search);\n        console.log(this.state.search)\n        this.setState({\n            search: \"\"\n        })\n    };\n\n\n\n    saveBook = (e) => {\n        const thisCardsId = e.target.getAttribute('data-id');\n        const newSavedBook = this.state.result\n        newSavedBook\n            .filter(result => result.id === thisCardsId)\n            .map(book => {\n                API.saveBook({\n                    bookId: book.id,\n                    title: book.volumeInfo.title,\n                    authors: book.volumeInfo.authors,\n                    description: book.volumeInfo.description,\n                    image: book.volumeInfo.imageLinks.smallThumbnail,\n                    link: book.volumeInfo.infoLink,\n                })\n            })\n    }\n\n\n\n\n    getAllBooksNotInDb = () => {\n       const dbBooksIds = [];\n        API.getBooks({})\n        .then(res => {\n            this.setState({dbSavedBooks: res.data})\n            console.log(res.data)\n        });\n        this.state.dbSavedBooks.forEach(book =>{\n            dbBooksIds.push(book.BookId)\n        });\n       const notExcludedBooks= this.state.result.filter(book => !dbBooksIds.includes(book.bookId));\n    //    this.setState({result: notExcludedBooks})\n       \n    }\n\n    // saveBook = (e) => {\n    //     const thisCardsId = e.target.getAttribute('data-id');\n    //     const newSavedBook = this.state.result\n    //       const allotherbooks =  newSavedBook.filter(result => result.id !== thisCardsId) \n    //                 this.setState({result: allotherbooks})\n    //             // } else {\n    //             //     newSavedBook.map(book => {\n    //             //         API.saveBook({\n    //             //             title: book.volumeInfo.title,\n    //             //             authors: book.volumeInfo.authors,\n    //             //             description: book.volumeInfo.description,\n    //             //             image: book.volumeInfo.imageLinks.smallThumbnail,\n    //             //             link: book.volumeInfo.infoLink,\n    //             //         })\n    //             //     })\n\n    //             // }\n\n\n    //         }\n\n\n    \n\n\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <Navbar />\n                    <Jumbotron>\n                        <Searchbar />\n                    </Jumbotron>\n                    <div className=\"row\">\n                        <div className=\"col l12 center align\">\n                            <div class=\"preloader-wrapper big active\">\n                                <div class=\"spinner-layer spinner-blue-only\">\n                                    <div class=\"circle-clipper left\">\n                                        <div class=\"circle\"></div>\n                                    </div><div class=\"gap-patch\">\n                                        <div class=\"circle\"></div>\n                                    </div><div class=\"circle-clipper right\">\n                                        <div class=\"circle\"></div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n            )\n\n\n        }\n        // else \n        return (\n\n            <div>\n                <Navbar />\n                <Jumbotron>\n                    <Searchbar\n                        value={this.state.search}\n                        handleInputChange={this.handleInputChange}\n                        handleFormSubmit={this.handleFormSubmit}\n                    />\n\n                </Jumbotron>\n\n                <Container>\n                    <Row>\n                        <Col>\n\n\n                            <CardWrapper title={'Results'}>\n                                    \n\n                            \n                                {this.state.result.map(result => (\n                                    <Card\n                                        key={result.id}\n                                        url={result.volumeInfo.imageLinks ? result.volumeInfo.imageLinks.smallThumbnail : \"https://via.placeholder.com/128x124\"}\n                                        name={result.volumeInfo.title}\n                                        author={result.volumeInfo.authors}\n                                        infoLink={result.volumeInfo.infoLink}\n                                        desc={result.volumeInfo.description ? result.volumeInfo.description : \"No description\"}\n                                        handleBookSave={this.saveBook}\n                                        id={result.id}\n                                        leftButton={\"View\"}\n                                        rightButton={\"Save\"}\n                                    />\n\n                                ))}\n\n\n                            </CardWrapper>\n\n\n\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n\n        )\n    }\n}\n\n\n\n\n\n\nexport default Home"]},"metadata":{},"sourceType":"module"}